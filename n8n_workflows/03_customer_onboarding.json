{
  "name": "CallWaiting AI â€¢ Customer Onboarding (48-Hour Setup)",
  "nodes": [
    {
      "id": "schedule_trigger",
      "name": "Schedule - Check New Paid Customers",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [200, 300],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      }
    },
    {
      "id": "get_paid_customers",
      "name": "Get Paid Customers Without Setup",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [420, 300],
      "parameters": {
        "operation": "getAll",
        "tableId": "leads",
        "returnAll": true,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "status",
              "condition": "equals",
              "keyValue": "paid"
            },
            {
              "keyName": "onboarding_sent",
              "condition": "isNull"
            }
          ]
        }
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "split_customers",
      "name": "Split Into Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [640, 300],
      "parameters": {
        "batchSize": 1,
        "options": {}
      }
    },
    {
      "id": "send_onboarding_email",
      "name": "Send Onboarding Questionnaire",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [860, 300],
      "parameters": {
        "fromEmail": "callwaitingai@gmail.com",
        "toEmail": "={{$json.email}}",
        "subject": "ðŸš€ Let's Set Up Your AI Receptionist - Quick Questionnaire",
        "emailFormat": "html",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #1e293b; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #22d3ee 0%, #3b82f6 100%); color: white; padding: 30px; border-radius: 8px; text-align: center; }\n    .content { background: #f8fafc; padding: 30px; margin-top: 20px; border-radius: 8px; }\n    .question { background: white; padding: 15px; margin: 15px 0; border-left: 4px solid #22d3ee; }\n    .cta-button { display: inline-block; background: #22d3ee; color: white; padding: 14px 28px; text-decoration: none; border-radius: 6px; font-weight: 600; margin: 20px 0; }\n    .footer { text-align: center; color: #64748b; font-size: 14px; margin-top: 30px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1 style=\"margin: 0;\">ðŸš€ Let's Build Your AI!</h1>\n    </div>\n    <div class=\"content\">\n      <p>Hi {{$json.name}},</p>\n      \n      <p>Congrats on starting your {{$json.plan}} setup! We're going to build an AI receptionist that sounds exactly like you want.</p>\n      \n      <h3>Answer These 5 Questions (Takes 5 Minutes)</h3>\n      \n      <div class=\"question\">\n        <strong>1. Business Overview</strong>\n        <p>What do you sell? (e.g., \"Custom hair bundles on TikTok Shop\")</p>\n      </div>\n      \n      <div class=\"question\">\n        <strong>2. Common Questions</strong>\n        <p>What are the top 3-5 questions customers ask? (e.g., shipping time, payment methods, return policy)</p>\n      </div>\n      \n      <div class=\"question\">\n        <strong>3. Booking/Scheduling</strong>\n        <p>Do customers need to book appointments? If yes, share your Calendly link or availability.</p>\n      </div>\n      \n      <div class=\"question\">\n        <strong>4. Voice & Tone</strong>\n        <p>How should the AI sound? (e.g., \"Friendly and casual\", \"Professional and direct\", \"Energetic like a hype person\")</p>\n      </div>\n      \n      <div class=\"question\">\n        <strong>5. Integration Channels</strong>\n        <p>Which channels do you want connected? (TikTok DM, WhatsApp, Phone, Instagram DM)</p>\n      </div>\n      \n      <p><strong>Next Step:</strong> Reply to this email with your answers, or book a 15-min call to discuss:</p>\n      \n      <a href=\"{{$env.NEXT_PUBLIC_CALENDLY_LINK}}\" class=\"cta-button\">Book Setup Call</a>\n      \n      <p><strong>Timeline:</strong> Once we have your answers, your AI goes live in 48 hours!</p>\n      \n      <p>Talk soon,<br>\n      <strong>The CallWaiting AI Team</strong></p>\n    </div>\n    <div class=\"footer\">\n      <p>CallWaiting AI - AI Receptionist for TikTok & Shopify Sellers</p>\n      <p>callwaitingai@gmail.com</p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "gmail_smtp",
          "name": "Gmail SMTP (CallWaiting)"
        }
      }
    },
    {
      "id": "mark_onboarding_sent",
      "name": "Mark Onboarding Email Sent",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1080, 300],
      "parameters": {
        "operation": "update",
        "tableId": "leads",
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "equals",
              "keyValue": "={{$json.id}}"
            }
          ]
        },
        "data": "={\n  \"onboarding_sent\": true,\n  \"onboarding_sent_at\": \"{{new Date().toISOString()}}\",\n  \"status\": \"onboarding\"\n}",
        "options": {}
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "webhook_onboarding_response",
      "name": "Webhook - Onboarding Form Response",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [200, 600],
      "parameters": {
        "path": "onboarding/response",
        "httpMethod": "POST",
        "responseMode": "lastNode",
        "options": {}
      },
      "webhookMethods": { "POST": true }
    },
    {
      "id": "respond_onboarding",
      "name": "Respond 200",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [420, 600],
      "parameters": {
        "responseBody": "={\"success\": true, \"message\": \"Thanks! We'll start your setup.\"}",
        "responseCode": 200
      }
    },
    {
      "id": "parse_onboarding_data",
      "name": "Parse Onboarding Answers",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [640, 600],
      "parameters": {
        "functionCode": "const data = $json.body || $json;\n\nreturn [{\n  json: {\n    customer_email: data.email,\n    business_overview: data.business_overview || '',\n    common_questions: data.common_questions || '',\n    booking_info: data.booking_info || '',\n    voice_tone: data.voice_tone || '',\n    integration_channels: data.integration_channels || '',\n    additional_notes: data.additional_notes || '',\n    submitted_at: new Date().toISOString()\n  }\n}];"
      }
    },
    {
      "id": "save_onboarding_data",
      "name": "Save Onboarding Data",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [860, 600],
      "parameters": {
        "operation": "insert",
        "tableId": "customer_onboarding",
        "data": "={{$json}}",
        "options": {}
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "update_lead_onboarding",
      "name": "Update Lead - Onboarding Complete",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1080, 600],
      "parameters": {
        "operation": "update",
        "tableId": "leads",
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "email",
              "condition": "equals",
              "keyValue": "={{$json.customer_email}}"
            }
          ]
        },
        "data": "={\n  \"status\": \"setup_in_progress\",\n  \"onboarding_completed\": true,\n  \"onboarding_completed_at\": \"{{new Date().toISOString()}}\"\n}",
        "options": {}
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "notify_team_onboarding",
      "name": "Notify Team - Onboarding Complete",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1300, 600],
      "parameters": {
        "fromEmail": "callwaitingai@gmail.com",
        "toEmail": "={{$env.ALERT_EMAIL}}",
        "subject": "ðŸ“‹ Customer Onboarding Complete - {{$node['Parse Onboarding Answers'].json.customer_email}}",
        "emailFormat": "html",
        "html": "=<h2>âœ… Customer Onboarding Questionnaire Completed</h2>\n<h3>Customer Email: {{$node['Parse Onboarding Answers'].json.customer_email}}</h3>\n<hr>\n<h3>Responses:</h3>\n<p><strong>Business Overview:</strong><br>{{$node['Parse Onboarding Answers'].json.business_overview}}</p>\n<p><strong>Common Questions:</strong><br>{{$node['Parse Onboarding Answers'].json.common_questions}}</p>\n<p><strong>Booking Info:</strong><br>{{$node['Parse Onboarding Answers'].json.booking_info}}</p>\n<p><strong>Voice & Tone:</strong><br>{{$node['Parse Onboarding Answers'].json.voice_tone}}</p>\n<p><strong>Integration Channels:</strong><br>{{$node['Parse Onboarding Answers'].json.integration_channels}}</p>\n<p><strong>Additional Notes:</strong><br>{{$node['Parse Onboarding Answers'].json.additional_notes}}</p>\n<hr>\n<p><strong>âš¡ NEXT STEPS:</strong></p>\n<ol>\n  <li>Configure AI voice model with customer's tone</li>\n  <li>Set up integration channels (TikTok/WhatsApp/Phone)</li>\n  <li>Test AI responses with sample questions</li>\n  <li>Schedule go-live call with customer (48h deadline)</li>\n</ol>",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "gmail_smtp",
          "name": "Gmail SMTP (CallWaiting)"
        }
      }
    },
    {
      "id": "send_setup_confirmation",
      "name": "Send Setup Start Confirmation",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1300, 720],
      "parameters": {
        "fromEmail": "callwaitingai@gmail.com",
        "toEmail": "={{$node['Parse Onboarding Answers'].json.customer_email}}",
        "subject": "ðŸŽ¯ Setup Started - Your AI Goes Live in 48 Hours!",
        "emailFormat": "html",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #1e293b; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #10b981 0%, #22d3ee 100%); color: white; padding: 30px; border-radius: 8px; text-align: center; }\n    .content { background: #f8fafc; padding: 30px; margin-top: 20px; border-radius: 8px; }\n    .timeline { background: white; padding: 20px; margin: 20px 0; border-left: 4px solid #10b981; }\n    .footer { text-align: center; color: #64748b; font-size: 14px; margin-top: 30px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1 style=\"margin: 0;\">ðŸŽ¯ Setup In Progress!</h1>\n    </div>\n    <div class=\"content\">\n      <p>Thanks for completing the questionnaire!</p>\n      \n      <p>We've received your answers and our team is now building your AI receptionist.</p>\n      \n      <div class=\"timeline\">\n        <h3>48-Hour Setup Timeline</h3>\n        <ul>\n          <li><strong>Next 24 hours:</strong> AI voice configuration & training</li>\n          <li><strong>24-36 hours:</strong> Integration setup (TikTok/WhatsApp/Phone)</li>\n          <li><strong>36-48 hours:</strong> Testing & go-live call with you</li>\n        </ul>\n      </div>\n      \n      <p><strong>What You'll Get:</strong></p>\n      <ul>\n        <li>âœ… AI trained on your FAQs and business info</li>\n        <li>âœ… Voice tone matching your brand</li>\n        <li>âœ… All requested channels connected</li>\n        <li>âœ… Test calls/messages before going live</li>\n      </ul>\n      \n      <p>We'll email you within 24 hours with a preview of your AI!</p>\n      \n      <p>Excited to get you live,<br>\n      <strong>The CallWaiting AI Team</strong></p>\n    </div>\n    <div class=\"footer\">\n      <p>CallWaiting AI - AI Receptionist for TikTok & Shopify Sellers</p>\n      <p>callwaitingai@gmail.com</p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "gmail_smtp",
          "name": "Gmail SMTP (CallWaiting)"
        }
      }
    }
  ],
  "connections": {
    "schedule_trigger": {
      "main": [[{ "node": "get_paid_customers", "type": "main", "index": 0 }]]
    },
    "get_paid_customers": {
      "main": [[{ "node": "split_customers", "type": "main", "index": 0 }]]
    },
    "split_customers": {
      "main": [[{ "node": "send_onboarding_email", "type": "main", "index": 0 }]]
    },
    "send_onboarding_email": {
      "main": [[{ "node": "mark_onboarding_sent", "type": "main", "index": 0 }]]
    },
    "webhook_onboarding_response": {
      "main": [[{ "node": "respond_onboarding", "type": "main", "index": 0 }]]
    },
    "respond_onboarding": {
      "main": [[{ "node": "parse_onboarding_data", "type": "main", "index": 0 }]]
    },
    "parse_onboarding_data": {
      "main": [[{ "node": "save_onboarding_data", "type": "main", "index": 0 }]]
    },
    "save_onboarding_data": {
      "main": [[{ "node": "update_lead_onboarding", "type": "main", "index": 0 }]]
    },
    "update_lead_onboarding": {
      "main": [
        [
          { "node": "notify_team_onboarding", "type": "main", "index": 0 },
          { "node": "send_setup_confirmation", "type": "main", "index": 0 }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-14T00:00:00.000Z",
  "versionId": "1"
}
