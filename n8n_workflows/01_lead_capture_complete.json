{
  "name": "CallWaiting AI â€¢ Lead Capture (Complete)",
  "nodes": [
    {
      "id": "webhook_lead_form",
      "name": "Webhook - Landing Page Form",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [200, 300],
      "parameters": {
        "path": "leads/capture",
        "httpMethod": "POST",
        "responseMode": "lastNode",
        "options": {
          "responseHeaders": {
            "entries": [
              { "name": "Access-Control-Allow-Origin", "value": "https://www.callwaitingai.dev" },
              { "name": "Access-Control-Allow-Methods", "value": "OPTIONS,POST" },
              { "name": "Access-Control-Allow-Headers", "value": "content-type" }
            ]
          }
        }
      },
      "webhookMethods": { "POST": true, "OPTIONS": true }
    },
    {
      "id": "respond_immediate",
      "name": "Respond 200 Immediately",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [420, 300],
      "parameters": {
        "responseBody": "={\"success\": true, \"message\": \"We'll be in touch within 24 hours!\"}",
        "responseCode": 200,
        "options": {
          "responseHeaders": {
            "entries": [
              { "name": "Content-Type", "value": "application/json" }
            ]
          }
        }
      }
    },
    {
      "id": "validate_lead",
      "name": "Validate & Sanitize Lead",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [640, 200],
      "parameters": {
        "functionCode": "const data = $json.body || $json;\n\n// Validate required fields\nif (!data.name || !data.email) {\n  throw new Error('Name and email are required');\n}\n\n// Email validation\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nif (!emailRegex.test(data.email)) {\n  throw new Error('Invalid email format');\n}\n\n// Phone validation (optional but sanitize)\nlet phone = (data.phone || '').replace(/[^0-9+]/g, '');\n\n// Sanitize inputs\nconst sanitized = {\n  name: (data.name || '').trim().substring(0, 100),\n  email: (data.email || '').trim().toLowerCase(),\n  phone: phone.substring(0, 20),\n  business: (data.business || '').trim().substring(0, 200),\n  message: (data.message || '').trim().substring(0, 500),\n  source: data.source || 'landing_page',\n  utm_source: data.utm_source || null,\n  utm_medium: data.utm_medium || null,\n  utm_campaign: data.utm_campaign || null,\n  created_at: new Date().toISOString()\n};\n\nreturn [{ json: sanitized }];"
      }
    },
    {
      "id": "check_duplicate",
      "name": "Check for Duplicate Lead",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [860, 200],
      "parameters": {
        "operation": "getAll",
        "tableId": "leads",
        "returnAll": false,
        "limit": 1,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "email",
              "condition": "equals",
              "keyValue": "={{$json.email}}"
            },
            {
              "keyName": "created_at",
              "condition": "gt",
              "keyValue": "={{new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()}}"
            }
          ]
        }
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "if_new_lead",
      "name": "Is New Lead?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1080, 200],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.length}}",
              "operation": "equal",
              "value2": 0
            }
          ]
        }
      }
    },
    {
      "id": "insert_lead",
      "name": "Insert Lead to Supabase",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1300, 120],
      "parameters": {
        "operation": "insert",
        "tableId": "leads",
        "data": "={{$node['Validate & Sanitize Lead'].json}}",
        "options": {}
      },
      "credentials": {
        "supabaseApi": {
          "id": "supabase_cred",
          "name": "Supabase (CallWaiting)"
        }
      }
    },
    {
      "id": "send_welcome_email",
      "name": "Send Welcome Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1520, 60],
      "parameters": {
        "fromEmail": "callwaitingai@gmail.com",
        "toEmail": "={{$node['Validate & Sanitize Lead'].json.email}}",
        "subject": "Welcome to CallWaiting AI - Your AI Receptionist is Almost Ready!",
        "emailFormat": "html",
        "html": "=<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #1e293b; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #22d3ee 0%, #3b82f6 100%); color: white; padding: 30px; border-radius: 8px; text-align: center; }\n    .content { background: #f8fafc; padding: 30px; margin-top: 20px; border-radius: 8px; }\n    .cta-button { display: inline-block; background: #22d3ee; color: white; padding: 14px 28px; text-decoration: none; border-radius: 6px; font-weight: 600; margin: 20px 0; }\n    .footer { text-align: center; color: #64748b; font-size: 14px; margin-top: 30px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1 style=\"margin: 0;\">ðŸŽ‰ Welcome to CallWaiting AI!</h1>\n    </div>\n    <div class=\"content\">\n      <p>Hi {{$node['Validate & Sanitize Lead'].json.name}},</p>\n      \n      <p>Thanks for your interest in CallWaiting AI! We're excited to help you turn missed calls and DMs into sales with our 24/7 AI receptionist.</p>\n      \n      <h3>What happens next?</h3>\n      <ul>\n        <li><strong>Within 24 hours:</strong> Our team will reach out to discuss your business needs</li>\n        <li><strong>Free trial:</strong> Test the AI voice with your real customers</li>\n        <li><strong>48-hour setup:</strong> If you love it, we'll configure everything for $300-$500</li>\n      </ul>\n      \n      <p><strong>Want to skip the wait?</strong> Book a live demo now:</p>\n      \n      <a href=\"{{$env.NEXT_PUBLIC_CALENDLY_LINK}}\" class=\"cta-button\">Schedule Demo Call</a>\n      \n      <p>Questions? Just reply to this email!</p>\n      \n      <p>Best,<br>\n      <strong>The CallWaiting AI Team</strong></p>\n    </div>\n    <div class=\"footer\">\n      <p>CallWaiting AI - AI Receptionist for TikTok & Shopify Sellers</p>\n      <p>callwaitingai@gmail.com</p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "gmail_smtp",
          "name": "Gmail SMTP (CallWaiting)"
        }
      }
    },
    {
      "id": "notify_team",
      "name": "Notify Team - New Lead",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1520, 180],
      "parameters": {
        "fromEmail": "callwaitingai@gmail.com",
        "toEmail": "={{$env.ALERT_EMAIL}}",
        "subject": "ðŸ”” New Lead: {{$node['Validate & Sanitize Lead'].json.name}}",
        "emailFormat": "html",
        "html": "=<h2>New CallWaiting AI Lead</h2>\n<ul>\n  <li><strong>Name:</strong> {{$node['Validate & Sanitize Lead'].json.name}}</li>\n  <li><strong>Email:</strong> {{$node['Validate & Sanitize Lead'].json.email}}</li>\n  <li><strong>Phone:</strong> {{$node['Validate & Sanitize Lead'].json.phone}}</li>\n  <li><strong>Business:</strong> {{$node['Validate & Sanitize Lead'].json.business}}</li>\n  <li><strong>Message:</strong> {{$node['Validate & Sanitize Lead'].json.message}}</li>\n  <li><strong>Source:</strong> {{$node['Validate & Sanitize Lead'].json.source}}</li>\n  <li><strong>UTM:</strong> {{$node['Validate & Sanitize Lead'].json.utm_campaign}}</li>\n</ul>\n<p><strong>Action Required:</strong> Reach out within 24 hours!</p>",
        "options": {}
      },
      "credentials": {
        "smtp": {
          "id": "gmail_smtp",
          "name": "Gmail SMTP (CallWaiting)"
        }
      }
    },
    {
      "id": "log_duplicate",
      "name": "Log Duplicate Lead",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1300, 280],
      "parameters": {
        "functionCode": "// Log duplicate but don't spam team\nconst lead = $node['Validate & Sanitize Lead'].json;\nconsole.log(`Duplicate lead detected: ${lead.email} (within 7 days)`);\nreturn [{ json: { duplicate: true, email: lead.email } }];"
      }
    }
  ],
  "connections": {
    "webhook_lead_form": {
      "main": [[{ "node": "respond_immediate", "type": "main", "index": 0 }]]
    },
    "respond_immediate": {
      "main": [[{ "node": "validate_lead", "type": "main", "index": 0 }]]
    },
    "validate_lead": {
      "main": [[{ "node": "check_duplicate", "type": "main", "index": 0 }]]
    },
    "check_duplicate": {
      "main": [[{ "node": "if_new_lead", "type": "main", "index": 0 }]]
    },
    "if_new_lead": {
      "main": [
        [{ "node": "insert_lead", "type": "main", "index": 0 }],
        [{ "node": "log_duplicate", "type": "main", "index": 0 }]
      ]
    },
    "insert_lead": {
      "main": [
        [
          { "node": "send_welcome_email", "type": "main", "index": 0 },
          { "node": "notify_team", "type": "main", "index": 0 }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-14T00:00:00.000Z",
  "versionId": "1"
}
