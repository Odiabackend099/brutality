# CallWaiting AI Backend Environment Variables
# Copy this to .env and fill in your actual values

# ===========================================
# CRITICAL: Rotate the exposed service key
# ===========================================

# Postgres Database
POSTGRES_PASSWORD=your_secure_postgres_password

# n8n Basic Auth (protect the editor)
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=your_super_secure_password

# n8n Encryption (for stored credentials)
N8N_ENCRYPTION_KEY=your_long_random_encryption_key_32_chars_min

# n8n Security (block dangerous nodes)
NODES_EXCLUDE=ExecuteCommand,ReadFile,WriteFile,ReadBinaryFile,WriteBinaryFile,HTTPRequest,Webhook

# Supabase Configuration
SUPABASE_URL=https://bcufohulqrceytkrqpgd.supabase.co
SUPABASE_SERVICE_KEY=your_rotated_service_role_key_here

# Flutterwave Configuration
FLW_SECRET_KEY=your_flutterwave_secret_key
FLW_VERIF_HASH=your_webhook_secret_hash_from_dashboard

# Email Configuration (Gmail SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=callwaitingai@gmail.com
SMTP_PASS=your_gmail_app_password_not_regular_password

# Business Configuration
ALERT_EMAIL=callwaitingai@gmail.com
CALENDLY_LINK=https://calendly.com/odiadev-ai/callwaiting-demo

# ===========================================
# Security Notes:
# ===========================================
# 1. Generate strong passwords (use a password manager)
# 2. Rotate the Supabase service_role key immediately
# 3. Use Gmail App Password, not regular password
# 4. Keep this .env file secure and never commit it
# 5. The service_role key bypasses RLS - keep it server-side only
