version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  n8n-main:
    image: n8nio/n8n:latest
    depends_on:
      - postgres
      - redis
    environment:
      DB_TYPE=postgresdb
      DB_POSTGRESDB_HOST=postgres
      DB_POSTGRESDB_PORT=5432
      DB_POSTGRESDB_DATABASE=n8n
      DB_POSTGRESDB_USER=n8n
      DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      DB_POSTGRESDB_SCHEMA=public

      EXECUTIONS_MODE=queue
      QUEUE_BULL_REDIS_HOST=redis
      QUEUE_BULL_REDIS_PORT=6379

      WEBHOOK_URL=https://n8n.odia.dev/
      N8N_PROXY_HOPS=1
      N8N_HOST=n8n.odia.dev
      N8N_PROTOCOL=https
      N8N_PORT=443

      N8N_BASIC_AUTH_ACTIVE=true
      N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      
      # Security: Block dangerous nodes
      NODES_EXCLUDE=ExecuteCommand,ReadFile,WriteFile,ReadBinaryFile,WriteBinaryFile,HTTPRequest,Webhook
      
      # External execution for security
      EXECUTIONS_PROCESS=main
      QUEUE_BULL_REDIS_DB=0

      # Supabase
      SUPABASE_URL=${SUPABASE_URL}
      SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}

      # Flutterwave
      FLW_SECRET_KEY=${FLW_SECRET_KEY}
      FLW_VERIF_HASH=${FLW_VERIF_HASH}

      # SMTP
      SMTP_HOST=${SMTP_HOST}
      SMTP_PORT=${SMTP_PORT}
      SMTP_USER=${SMTP_USER}
      SMTP_PASS=${SMTP_PASS}

      # Business
      ALERT_EMAIL=${ALERT_EMAIL}
      CALENDLY_LINK=${CALENDLY_LINK}

    volumes:
      - n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    restart: unless-stopped

  n8n-worker:
    image: n8nio/n8n:latest
    depends_on:
      - postgres
      - redis
    environment:
      DB_TYPE=postgresdb
      DB_POSTGRESDB_HOST=postgres
      DB_POSTGRESDB_PORT=5432
      DB_POSTGRESDB_DATABASE=n8n
      DB_POSTGRESDB_USER=n8n
      DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      DB_POSTGRESDB_SCHEMA=public

      EXECUTIONS_MODE=queue
      QUEUE_BULL_REDIS_HOST=redis
      QUEUE_BULL_REDIS_PORT=6379

      WEBHOOK_URL=https://n8n.odia.dev/
      N8N_PROXY_HOPS=1
      N8N_HOST=n8n.odia.dev
      N8N_PROTOCOL=https
      N8N_PORT=443

      N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # Supabase
      SUPABASE_URL=${SUPABASE_URL}
      SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}

      # Flutterwave
      FLW_SECRET_KEY=${FLW_SECRET_KEY}
      FLW_VERIF_HASH=${FLW_VERIF_HASH}

      # SMTP
      SMTP_HOST=${SMTP_HOST}
      SMTP_PORT=${SMTP_PORT}
      SMTP_USER=${SMTP_USER}
      SMTP_PASS=${SMTP_PASS}

      # Business
      ALERT_EMAIL=${ALERT_EMAIL}
      CALENDLY_LINK=${CALENDLY_LINK}

    command: ["n8n", "worker"]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data:
