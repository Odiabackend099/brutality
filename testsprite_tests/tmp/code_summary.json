{
  "tech_stack": [
    "TypeScript",
    "Next.js 14",
    "React 18",
    "Supabase",
    "PostgreSQL",
    "Tailwind CSS",
    "Flutterwave",
    "OpenAI",
    "MiniMax TTS",
    "Lucide React",
    "Vercel",
    "n8n Cloud"
  ],
  "features": [
    {
      "name": "Landing Page",
      "description": "Conversion-optimized landing page with hero section, pricing cards, FAQ, and mobile sticky CTA",
      "files": [
        "app/page.tsx",
        "app/layout.tsx",
        "app/globals.css"
      ]
    },
    {
      "name": "Authentication System",
      "description": "Complete authentication system with Supabase integration, email/password login, Google OAuth, and session management",
      "files": [
        "app/login/page.tsx",
        "app/signup/page.tsx",
        "app/forgot-password/page.tsx",
        "app/auth/reset-password/page.tsx",
        "app/auth/callback/route.ts",
        "lib/auth-helpers.ts",
        "lib/supabase-client.ts",
        "lib/supabase-server.ts",
        "middleware.ts",
        "app/api/auth/session/route.ts"
      ]
    },
    {
      "name": "Dashboard Features",
      "description": "User dashboard with usage statistics, recent calls, and agent management",
      "files": [
        "app/dashboard/page.tsx",
        "app/dashboard/layout.tsx",
        "app/dashboard/calls/page.tsx",
        "app/dashboard/payments/page.tsx",
        "app/dashboard/settings/page.tsx",
        "app/dashboard/leads/page.tsx",
        "lib/api-client.ts"
      ]
    },
    {
      "name": "AI Agent Management",
      "description": "Creation, configuration, and testing of AI voice agents with custom prompts and voice presets",
      "files": [
        "app/agent/[id]/page.tsx",
        "components/CreateAgentModal.tsx",
        "app/api/create-agent/route.ts",
        "app/api/generate-voice/route.ts",
        "app/api/agent/[id]/webhook/route.ts",
        "lib/minimax.ts",
        "lib/usage.ts"
      ]
    },
    {
      "name": "Payment Processing",
      "description": "Flutterwave integration for subscription payments, payment link generation, and webhook handling",
      "files": [
        "app/billing/page.tsx",
        "app/success/page.tsx",
        "app/api/create-payment-link/route.ts",
        "app/api/flutterwave-webhook/route.ts",
        "lib/flutterwave.ts",
        "types/flutterwave-node-v3.d.ts"
      ]
    },
    {
      "name": "API & Security",
      "description": "REST API endpoints, Row-Level Security (RLS), API key validation, and health checks",
      "files": [
        "app/api/health/route.ts",
        "app/api/usage-report/route.ts",
        "sql/schema.sql",
        "sql/dashboard-tables.sql"
      ]
    },
    {
      "name": "Data Management",
      "description": "Data export utilities, API integration layer, and database operations",
      "files": [
        "lib/api.ts",
        "lib/exportData.ts",
        "lib/supabase.ts"
      ]
    },
    {
      "name": "UI Components",
      "description": "Reusable React components for forms, modals, and data display",
      "files": [
        "components/UsageQuota.tsx",
        "components/ErrorBoundary.tsx",
        "components/ChatWidget.tsx"
      ]
    },
    {
      "name": "Configuration & Setup",
      "description": "Environment configuration, database setup scripts, and deployment guides",
      "files": [
        "env.example",
        "setup-env.sh",
        "setup-demo-supabase.sh",
        "test-setup.js",
        "SETUP_GUIDE.md"
      ]
    },
    {
      "name": "Documentation",
      "description": "Comprehensive documentation for setup, deployment, and usage",
      "files": [
        "README.md",
        "PRODUCTION_READY_SUMMARY.md",
        "MDP_IMPLEMENTATION_COMPLETE.md",
        "QUICK_START_MDP.md",
        "PRODUCTION_DEPLOYMENT_CHECKLIST.md"
      ]
    }
  ]
}